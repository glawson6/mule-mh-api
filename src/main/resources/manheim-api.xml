<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.7.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

    <spring:beans>
        <context:annotation-config/>
        <context:property-placeholder location="classpath:${MuleEnv}.properties"/>
    </spring:beans>
    <http:listener-config name="httpManheimEventListenerConfig" host="0.0.0.0" port="${http.port}"
                          basePath="${manheimEventListenerPath}" doc:name="HTTP Listener Configuration"/>
    <!--http:request-config name="HTTP_Request_Configuration" host="www.rentcentric.com" port="${port_rentCentric}" basePath="push" doc:name="HTTP Request Configuration"/-->
    <http:request-config name="httpManheimEventSubscriberTokenRequestConfig" protocol="HTTPS" host="${manheimAPIHost}"
                         port="${manheimAPIPort}" basePath="${manheimEventSubscriberTokenPath}"
                         doc:name="HTTP Request Configuration">
        <http:basic-authentication username="${manheimEventSubscriberUsername}"
                                   password="${manheimEventSubscriberPassword}"/>
    </http:request-config>

    <http:request-config name="httpManheimAPIConfig" protocol="HTTPS" host="${manheimAPIHost}" port="${manheimAPIPort}"
                         doc:name="HTTP Request Configuration">
    </http:request-config>

    <choice-exception-strategy name="choiceException">
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger category="choiceException" message="Message in Exception #[exception]" level="INFO" doc:name="Logger"/>
            <set-payload value="#[{'Message':'Error getting data '}]" doc:name="Set Payload Response"/>
            <json:object-to-json-transformer doc:name="Object to JSON"/>
        </catch-exception-strategy>
    </choice-exception-strategy>

    <flow name="testGetAccessToken">
        <http:listener config-ref="httpManheimEventListenerConfig" path="/testGetAccessToken" doc:name="HTTP"
                       allowedMethods="GET"/>
        <flow-ref name="getAccessTokenMap" doc:name="getAccessToken"/>
        <set-payload doc:name="Set Payload" value="#[payload['accessToken']]"/>
        <logger level="INFO" doc:name="Logger" category="testGetAccessToken"/>
    </flow>

    <flow name="testCreateSubscriberMap">
        <http:listener config-ref="httpManheimEventListenerConfig" path="/testCreateSubscriberMap" doc:name="HTTP"
                       allowedMethods="GET"/>
        <flow-ref name="getAccessTokenMap" doc:name="getAccessToken"/>
        <set-payload doc:name="Set Payload" value="#[payload['accessToken']]"/>
        <logger level="INFO" doc:name="Logger" message="Got AccessToken message #[message] with payload #[payload]" category="testCreateSubscriberMap"/>
        <flow-ref name="createSubscriberMap" doc:name="createSubscriberMap"/>
        <logger level="INFO" doc:name="Logger" message="Got SubscriberMap message #[message] with payload #[payload]" category="testCreateSubscriberMap"/>
        <exception-strategy ref="choiceException"/>
    </flow>


    <flow name="testListSubscriberMap">
        <http:listener config-ref="httpManheimEventListenerConfig" path="/testListSubscriberMap" doc:name="HTTP"
                       allowedMethods="GET"/>
        <flow-ref name="getAccessTokenMap" doc:name="getAccessToken"/>
        <set-payload doc:name="Set Payload" value="#[payload['accessToken']]"/>
        <logger level="INFO" doc:name="Logger" message="Got AccessToken message #[message] with payload #[payload]" category="testCreateSubscriberMap"/>
        <flow-ref name="listSubscriberMap" doc:name="listSubscriberMap"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger level="INFO" doc:name="Logger" message="Got SubscriberMap message #[message] with payload #[payload]" category="testCreateSubscriberMap"/>
        <exception-strategy ref="choiceException"/>
    </flow>

    <flow name="getAccessTokenMap">
        <!--set-payload value="#['grant_type=password&amp;username=bmw.salesforce&amp;password=C9CCBA8C74c9&amp;client_Id=bmw.salesforce&amp;client_secret=pass123']"/-->

        <http:request config-ref="httpManheimEventSubscriberTokenRequestConfig"
                      doc:name="Query user resource using token" parseResponse="false"
                      method="POST" sendBodyMode="ALWAYS"
                      path="token">
            <http:request-builder>
                <http:header headerName="Content-Type" value="application/x-www-form-urlencoded"/>
                <http:header headerName="Cache-Control" value="no-cache"/>
            </http:request-builder>
        </http:request>
        <logger category="getAccessToken"
                message="Message after request for access token #[message] with payload #[payload]" level="DEBUG"
                doc:name="Logger"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to HashMap"/>
    </flow>
    <!--  We are expecting the payload to be the accessToken. This will be used in the Authorization bearer header -->
    <flow name="createSubscriberMap">
        <set-variable variableName="authorization" value="#[payload]" doc:name="Set authorization"/>
        <enricher target="#[variable:headers]" doc:name="Message Enricher">
            <set-payload value="#[{'authorization':'${manheimEventListenerCallbackAuthorization}'}]"
                         doc:name="Enricher Set Headers"/>
        </enricher>
        <set-payload value="#[{'callback':'${manheimEventListenerCallbackURL}', 'headers':flowVars.headers}]"
                     doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger category="createSubscriberMap" message="Payload sent to Manheim API #[payload]" level="INFO"/>
        <http:request config-ref="httpManheimAPIConfig" path="subscribers" method="POST" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars['authorization']]"/>
            </http:request-builder>
        </http:request>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to HashMap"/>
    </flow>

    <!--  We are expecting the payload to be the accessToken. This will be used in the Authorization bearer header -->
    <flow name="listSubscriberMap">
        <set-variable variableName="authorization" value="#[payload]" doc:name="Set authorization"/>
        <logger category="listSubscriberMap" message="Payload sent to Manheim API #[payload]" level="INFO"/>
        <http:request config-ref="httpManheimAPIConfig" path="subscribers/mine" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars['authorization']]"/>
            </http:request-builder>
        </http:request>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to HashMap"/>
    </flow>

    <!--  We are expecting the payload to be the accessToken. This will be used in the Authorization bearer header -->
    <flow name="deleteSubscriberMap">
        <set-variable variableName="authorization" value="#[payload]" doc:name="Set authorization"/>
        <logger category="listSubscriberMap" message="Payload sent to Manheim API #[payload]" level="INFO"/>
        <http:request config-ref="httpManheimAPIConfig" path="subscribers/mine" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars['authorization']]"/>
            </http:request-builder>
        </http:request>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to HashMap"/>
    </flow>

    <!--  We are expecting the payload to be the accessToken. This will be used in the Authorization bearer header -->
    <flow name="createSubscriptionMap">
        <set-variable variableName="authorization" value="#[payload]" doc:name="Set authorization"/>

        <enricher target="#[variable:subscriber]" doc:name="Message Enricher">
            <set-payload value="#[{'subscriber':'#[flowVars.subscriberURL]'}]"
                         doc:name="Enricher Set Subscriber"/>
        </enricher>
        <enricher target="#[variable:resource]" doc:name="Message Enricher">
            <set-payload value="#[{'subscriber':'#[flowVars.resourceURL]'}]"
                         doc:name="Enricher Set Resource"/>
        </enricher>
        <set-payload value="#[{'subscriber':flowVars.subscriber, 'headers':flowVars.resource}]"
                     doc:name="Set Payload"/>

        <http:request config-ref="httpManheimAPIConfig" path="subscriptions/id/#[flowVars['entityId']]" method="POST" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars['authorization']]"/>
            </http:request-builder>
        </http:request>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to HashMap"/>
    </flow>
</mule>
